(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return i}));var o=n(3),a=n(7),r=(n(0),n(90)),c={title:"Matchers"},l={unversionedId:"matchers",id:"matchers",isDocsHomePage:!1,title:"Matchers",description:"Matchers let you test values and patterns, either simple or complex, in a succint way.",source:"@site/docs/matchers.md",slug:"/matchers",permalink:"/docs/matchers",editUrl:"https://github.com/milesj/rut/edit/master/website/docs/matchers.md",version:"current",sidebar:"docs",previous:{title:"Jest",permalink:"/docs/tooling/jest"},next:{title:"Mocks",permalink:"/docs/mocks"}},b=[{value:"<code>toBeChecked()</code>",id:"tobechecked",children:[]},{value:"<code>toBeDisabled()</code>",id:"tobedisabled",children:[]},{value:"<code>toBeElementType()</code>",id:"tobeelementtype",children:[]},{value:"<code>toContainNode()</code>",id:"tocontainnode",children:[]},{value:"<code>toHaveClassName()</code>",id:"tohaveclassname",children:[]},{value:"<code>toHaveKey()</code>",id:"tohavekey",children:[]},{value:"<code>toHaveProp()</code>",id:"tohaveprop",children:[]},{value:"<code>toHaveProps()</code>",id:"tohaveprops",children:[]},{value:"<code>toHaveRendered()</code>",id:"tohaverendered",children:[]},{value:"<code>toHaveValue()</code>",id:"tohavevalue",children:[]}],p={toc:b};function i(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Matchers let you test values and patterns, either simple or complex, in a succint way."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"The examples below are using Jest matchers, but the same approach can be used for other testing\nframeworks with a bit of work.")),Object(r.b)("h2",{id:"tobechecked"},Object(r.b)("inlineCode",{parentName:"h2"},"toBeChecked()")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"toBeChecked(): boolean")),Object(r.b)("p",null,"Check that an element has a truthy ",Object(r.b)("inlineCode",{parentName:"p"},"checked")," or ",Object(r.b)("inlineCode",{parentName:"p"},"defaultChecked")," prop. This is most commonly used\nwith form fields."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render<InputProps>(<Input checked />);\n\nexpect(root).toBeChecked(); // true\n")),Object(r.b)("h2",{id:"tobedisabled"},Object(r.b)("inlineCode",{parentName:"h2"},"toBeDisabled()")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"toBeChecked(): boolean")),Object(r.b)("p",null,"Check that an element has a truthy ",Object(r.b)("inlineCode",{parentName:"p"},"disabled")," prop. This is most commonly used with form fields."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render<InputProps>(<Input disabled />);\n\nexpect(root).toBeDisabled(); // true\n")),Object(r.b)("h2",{id:"tobeelementtype"},Object(r.b)("inlineCode",{parentName:"h2"},"toBeElementType()")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"toBeElementType(type: React.ElementType): boolean")),Object(r.b)("p",null,"Check that an element is a valid React element type. Accepts either a class or function component,\nor the name of a host component (HTML tag)."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render<InputProps>(<Input disabled />);\n\nexpect(root).toBeElementType(Input); // true\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render(<div />);\n\nexpect(root).toBeElementType('div'); // true\n")),Object(r.b)("h2",{id:"tocontainnode"},Object(r.b)("inlineCode",{parentName:"h2"},"toContainNode()")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"toContainNode(node: React.ReactNode): boolean")),Object(r.b)("p",null,"Check that an element contains a node (string, element, etc) within its children.\n",Object(r.b)("a",{parentName:"p",href:"/docs/caveats"},"A caveat exists for this matcher"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render(<div>Hello world</div>);\n\nexpect(root).toContainNode('Hello world'); // true\n")),Object(r.b)("p",null,"Will also check for the node at any depth in the current tree."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render(\n  <div>\n    <article>\n      <h1>Rut</h1>\n    </article>\n  </div>,\n);\n\nexpect(root).toContainNode('Rut'); // true\n")),Object(r.b)("p",null,"And when checking elements, it will compare the component type and props for deep equality."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render(\n  <div>\n    <article>\n      <Title level={1}>Rut</Title>\n    </article>\n  </div>,\n);\n\nexpect(root).toContainNode(<Title level={1}>Rut</Title>); // true\n")),Object(r.b)("h2",{id:"tohaveclassname"},Object(r.b)("inlineCode",{parentName:"h2"},"toHaveClassName()")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"toHaveClassName(name: string): boolean")),Object(r.b)("p",null,"Check that an element has a ",Object(r.b)("inlineCode",{parentName:"p"},"className")," prop that matches the defined value."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render(<div className=\"foo-bar\" />);\n\nexpect(root).toHaveClassName('foo'); // false\n")),Object(r.b)("h2",{id:"tohavekey"},Object(r.b)("inlineCode",{parentName:"h2"},"toHaveKey()")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"toHaveKey(name: string): boolean")),Object(r.b)("p",null,"Check that an element has a React ",Object(r.b)("inlineCode",{parentName:"p"},"key")," that matches the provided value."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render(<div key={123} />);\n\nexpect(root).toHaveKey(123); // true\n")),Object(r.b)("h2",{id:"tohaveprop"},Object(r.b)("inlineCode",{parentName:"h2"},"toHaveProp()")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"toHaveProp(name: string, value?: unknown): boolean")),Object(r.b)("p",null,"Check that an element has a prop that matches the provided name, with optional matching value.\nArrays and objects will be matched using deep equality."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render(<div id=\"foo\" />);\n\nexpect(root).toHaveProp('id'); // true\nexpect(root).toHaveProp('id', 'bar'); // false\n")),Object(r.b)("h2",{id:"tohaveprops"},Object(r.b)("inlineCode",{parentName:"h2"},"toHaveProps()")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"toHaveProps(props: { ","[key: string]",": unknown }): boolean")),Object(r.b)("p",null,"Check that an element's props match all the provided props and their values. Arrays and objects will\nbe matched using deep equality."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render(<div id=\"foo\" role=\"main\" />);\n\nexpect(root).toHaveProps({ id: 'foo', role: 'main' }); // true\n")),Object(r.b)("h2",{id:"tohaverendered"},Object(r.b)("inlineCode",{parentName:"h2"},"toHaveRendered()")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"toHaveRendered(): boolean")),Object(r.b)("p",null,"Check that a component has rendered children. If a component returns ",Object(r.b)("inlineCode",{parentName:"p"},"null"),", this will evaluate to\nfalse."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"function NoChildren() {\n  return null;\n}\n\nconst { root } = render(<NoChildren />);\n\nexpect(root).toHaveRendered(); // false\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"function WithChildren() {\n  return <div />;\n}\n\nconst { root } = render(<WithChildren />);\n\nexpect(root).toHaveRendered(); // true\n")),Object(r.b)("h2",{id:"tohavevalue"},Object(r.b)("inlineCode",{parentName:"h2"},"toHaveValue()")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"toHaveValue(value: string): boolean")),Object(r.b)("p",null,"Check that an element has a ",Object(r.b)("inlineCode",{parentName:"p"},"value")," or ",Object(r.b)("inlineCode",{parentName:"p"},"defaultValue")," prop that matches the provided value. This is\nmost commonly used with form fields."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},"const { root } = render<InputProps>(<Input defaultValue=\"foo\" />);\n\nexpect(root).toHaveValue('foo'); // true\n")))}i.isMDXComponent=!0},90:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var o=n(0),a=n.n(o);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),i=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=i(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),d=i(n),u=o,m=d["".concat(c,".").concat(u)]||d[u]||s[u]||r;return n?a.a.createElement(m,l(l({ref:t},p),{},{components:n})):a.a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,c=new Array(r);c[0]=u;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var p=2;p<r;p++)c[p]=n[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);