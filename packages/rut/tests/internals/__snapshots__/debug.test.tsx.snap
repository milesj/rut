// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`debug() adds key and ref props first 1`] = `
<ClassComp key="123" ref={new ClassComp()} name="test">
  <div />
</ClassComp>
`;

exports[`debug() adds key and ref props first 2`] = `
"<ClassComp name=\\"test\\">
  <div />
</ClassComp>"
`;

exports[`debug() doesnt render children 1`] = `"<ChildComp baz bar={123} foo=\\"abc\\" />"`;

exports[`debug() element output hides DOM output 1`] = `
"<Outer>
  <Header>TitleDescription!</Header>
  Description.
  <FuncComp />
</Outer>"
`;

exports[`debug() element output hides React output 1`] = `
"<main role=\\"main\\">
  <div>
    <header id=\\"header\\">
      <h1>Title</h1>
      <p>Description!</p>
    </header>
  </div>
  <section>
    Description.
    <span />
  </section>
</main>"
`;

exports[`debug() element output renders normal 1`] = `
"<Outer>
  <main role=\\"main\\">
    <Header>
      <div>
        <header id=\\"header\\">
          <h1>Title</h1>
          <p>Description!</p>
        </header>
      </div>
    </Header>
    <section>
      Description.
      <FuncComp>
        <span />
      </FuncComp>
    </section>
  </main>
</Outer>"
`;

exports[`debug() excludes components by name 1`] = `
"<ExcludeComp>
  <div>
    <b>Bold</b>
  </div>
</ExcludeComp>"
`;

exports[`debug() excludes props by name 1`] = `
"<ExcludeComp bar={123}>
  <div />
</ExcludeComp>"
`;

exports[`debug() formats array props 1`] = `
<ArrayProp list={[ "string", 123, true, null, {}, ... 1 more ]}>
  <ul />
</ArrayProp>
`;

exports[`debug() formats array props 2`] = `
<ArrayProp
  list={[
    { id: 1, name: "Bruce Wayne" },
    { id: 2, name: "Clark Kent" },
    { id: 3, name: "Barry Allen" },
    { id: 4, name: "Tony Stark" },
    { id: 5, name: "Steve Rogers" },
    ... 1 more,
  ]}
>
  <ul />
</ArrayProp>
`;

exports[`debug() formats function and class instance props 1`] = `
<FuncProp func={funcName()} inst={new ClassName()}>
  <div />
</FuncProp>
`;

exports[`debug() formats map props 1`] = `
<MapProp map={new Map({ foo: 123, bar: 456, baz: 789 })}>
  <div />
</MapProp>
`;

exports[`debug() formats object props 1`] = `
<ObjectProp data={{ id: 1, name: "Bruce Wayne", alias: "Batman", age: 40 }}>
  <div />
</ObjectProp>
`;

exports[`debug() formats regex props 1`] = `
<RegexProp pattern={/foo|bar|baz/u}>
  <div />
</RegexProp>
`;

exports[`debug() formats set props 1`] = `
<SetProp set={new Set([ "foo", "bar", "baz" ])}>
  <div />
</SetProp>
`;

exports[`debug() includes falsy props 1`] = `
"<FalsyComp foo>
  <div />
</FalsyComp>"
`;

exports[`debug() includes falsy props 2`] = `
"<FalsyComp foo bar={false} baz={null}>
  <div />
</FalsyComp>"
`;

exports[`debug() indents large data structure props correctly 1`] = `
"<IndentComp
  arr={[ 1, [ 2, [ 4, [ 5 ] ] ], 3 ]}
  obj={{
    foo1: 123,
    foo2: \\"abc\\",
    foo3: {
      bar1: 456,
      bar2: {
        baz1: { value: 123, val: 456, v: 789 },
        baz2: [ 1, 2, 3, 4, 5 ],
        baz3: true,
        baz4: false,
      },
      bar3: \\"xyz\\",
    },
  }}
>
  <div />
</IndentComp>"
`;

exports[`debug() sorts props, and groups into: true first, everything else, event handlers last 1`] = `
<SortOrder
  enabled
  content={<div />}
  name="Rut"
  onClick={mockConstructor()}
  onUpdate={mockConstructor()}
>
  <div />
</SortOrder>
`;

exports[`debug() sorts props, and groups into: true first, everything else, event handlers last 2`] = `
"<SortOrder
  content={<div />}
  enabled
  name=\\"Rut\\"
  onClick={mockConstructor()}
  onUpdate={mockConstructor()}
>
  <div />
</SortOrder>"
`;

exports[`debug() sorts props, and groups into: true first, everything else, event handlers last 3`] = `
"<SortOrder
  enabled
  name=\\"Rut\\"
  content={<div />}
  onClick={mockConstructor()}
  onUpdate={mockConstructor()}
>
  <div />
</SortOrder>"
`;

exports[`debug() sorts props, and groups into: true first, everything else, event handlers last 4`] = `
"<SortOrder
  onClick={mockConstructor()}
  name=\\"Rut\\"
  content={<div />}
  enabled
  onUpdate={mockConstructor()}
>
  <div />
</SortOrder>"
`;
